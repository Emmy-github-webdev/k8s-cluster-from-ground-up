NAME=k8s-cluster-from-ground-up
VPC_ID=vpc-07f6a88e1fd2bdd78
AWS_REGION=us-east-1
DHCP_OPTION_SET_ID=dopt-08f6d37f12aa3f16b
SUBNET_ID=subnet-06a9502748c5f559a
INTERNET_GATEWAY_ID=igw-0c320649fa93ebd4a
ROUTE_TABLE_ID=rtb-02d8aafe60cb3617d
SECURITY_GROUP_ID=sg-09186e2f7e236c756
LOAD_BALANCER_ARN=arn:aws:elasticloadbalancing:us-east-1:680361416611:loadbalancer/net/k8s-cluster-from-ground-up/8c0c0c849ade75d3
TARGET_GROUP_ARN=arn:aws:elasticloadbalancing:us-east-1:680361416611:targetgroup/k8s-cluster-from-ground-up/c0da742984e03a4e
KUBERNETES_PUBLIC_ADDRESS=k8s-cluster-from-ground-up-8c0c0c849ade75d3.elb.us-east-1.amazonaws.com
IMAGE_ID=ami-0b0ea68c435eb488d


# Distribute files

# Worker node

for i in 0; do
  instance="${NAME}-worker-${i}"
  external_ip=$(aws ec2 describe-instances \
    --filters "Name=tag:Name,Values=${instance}" \
    --output text --query 'Reservations[].Instances[].PublicIpAddress')
  scp -i ../ssh/${NAME}.id_rsa \
    kube-proxy.kubeconfig k8s-cluster-from-ground-up-worker-${i}.kubeconfig ubuntu@${external_ip}:~/; \
done

for i in 1; do
  instance="${NAME}-worker-${i}"
  external_ip=$(aws ec2 describe-instances \
    --filters "Name=tag:Name,Values=${instance}" \
    --output text --query 'Reservations[].Instances[].PublicIpAddress')
  scp -i ../ssh/${NAME}.id_rsa \
    kube-proxy.kubeconfig k8s-cluster-from-ground-up-worker-${i}.kubeconfig ubuntu@${external_ip}:~/; \
done

for i in 2; do
  instance="${NAME}-worker-${i}"
  external_ip=$(aws ec2 describe-instances \
    --filters "Name=tag:Name,Values=${instance}" \
    --output text --query 'Reservations[].Instances[].PublicIpAddress')
  scp -i ../ssh/${NAME}.id_rsa \
    kube-proxy.kubeconfig k8s-cluster-from-ground-up-worker-${i}.kubeconfig ubuntu@${external_ip}:~/; \
done

# Master node

for i in 0 1 2; do
instance="${NAME}-master-${i}" \
  external_ip=$(aws ec2 describe-instances \
    --filters "Name=tag:Name,Values=${instance}" \
    --output text --query 'Reservations[].Instances[].PublicIpAddress')
  scp -i ../ssh/${NAME}.id_rsa \
    ca.pem ca-key.pem service-account-key.pem service-account.pem \
    admin.kubeconfig kube-controller-manager.kubeconfig kube-scheduler.kubeconfig ubuntu@${external_ip}:~/;
done

Solution to etcd server error

https://linuxhandbook.com/sudo-unable-resolve-host/